<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<!-- revision 9708 -->

<sect1 id="ch-bootable-grub" role="wrap">
  <?dbhtml filename="grub.html"?>

  <sect1info condition="script">
    <productname>grub</productname> 
    <productnumber>&grub-version;</productnumber> 
    <address>&grub-url;</address> 
  </sect1info>

  <!--<title>Using GRUB to Set Up the Boot Process</title>-->
  <title>GRUBを使用してブートプロセスをセットアップする</title>

  <sect2>
    <!--<title>Introduction</title>-->
    <title>イントロダクション</title>

    <warning><para>Configuring GRUB incorrectly can render your system
    inoperable without an alternate boot device such as a CD-ROM.  This
    section is not required to boot your LFS system.  You may just
    want to modify your current boot loader, e.g. Grub-Legacy, GRUB2, or
    LILO.</para>
    <para>GRUBの設定を間違ってしまうと、CD-ROMのような別のブートデバイスを使わない限り、システムを操作できなくなります。
    このセクションは構築したLFSシステムブートするために必要というわけではありません。
    あなたが、現在のブートローダーを変えたいと考えているかもしれないので。
    例えば、Grub-Legacy、GRUB2、LILOなどに。
    </para></warning>

    <para> Ensure that an emergency boot disk is ready to
    <quote>rescue</quote> the computer if the computer becomes
    unusable (un-bootable).  If you do not already have a boot device, 
    you can create one.  In order for the procedure below to work, 
    you need to jump ahead to BLFS and install <ulink 
    url="http://www.linuxfromscratch.org/blfs/view/svn/multimedia/xorriso.html"> 
    xorriso</ulink>.</para>
    <para>もしコンピュータが使用不可能(ブートしない)状況になった場合に備え、コンピュータを<quote>救出</quote>するための緊急ブートディスクの準備をお願いします。
    もし、ブート可能なデバイスを持っていない場合は、作成することが可能です。
    以下の手順を実行するためには、BLFSにある<ulink url="http://www.linuxfromscratch.org/blfs/view/svn/multimedia/xorriso.html">xorriso</ulink>をインストールしてください。</para>

<screen role="nodump"><userinput>cd /tmp &amp;&amp;
grub-mkrescue --output=grub-img.iso &amp;&amp;
xorriso -as cdrecord -v dev=/dev/cdrw blank=as_needed grub-img.iso</userinput>
</screen>

  </sect2>

  <sect2>
    <!-- <title>GRUB Naming Conventions</title> -->
    <title>GRUBの命名規則</title>
    
    <para>GRUB uses its own naming structure for drives and partitions in
    the form of <emphasis>(hdn,m)</emphasis>, where <emphasis>n</emphasis>
    is the hard drive number and <emphasis>m</emphasis> is the partition
    number. The hard drive number starts from zero, but the partition number
    starts from one for normal partitions and five for extended partitions.
    Note that this is different from earlier versions where
    both numbers started from zero. For example, partition <filename
    class="partition">sda1</filename> is <emphasis>(hd0,1)</emphasis> to
    GRUB and <filename class="partition">sdb3</filename> is
    <emphasis>(hd1,3)</emphasis>. In contrast to Linux, GRUB does not
    consider CD-ROM drives to be hard drives. For example, if using a CD
    on <filename class="partition">hdb</filename> and a second hard drive
    on <filename class="partition">hdc</filename>, that second hard drive
    would still be <emphasis>(hd1)</emphasis>.</para>
    <para>GRUBは、ドライブとパーティションについて、<emphasis>(hdn,m)</emphasis>の形式の独自の命名構造を使います。
    <emphasis>n</emphasis>はハードドライブの番号を示し、<emphasis>m</emphasis>はパーティションの番号を示します。
    ハードドライブの番号は0から始まりますが、パーティションの番号は1から始まり、それは基本パーティションです。パーティション番号5は拡張パーティションとなります。
    以前のバージョンではドライブ番号もパーティション番号も0から始まっていましたが、新バージョンでは異なることに留意してください。
    例えば、パーティション<filename class="partition">sda1</filename>は<emphasis>(hd0,1)</emphasis>、<filename class="partition">sdb3</filename>は<emphasis>(hd1,3)</emphasis>となります。
    Linuxとは対照的に、GRUBはCD-ROMドライブをハードドライブとはみなしません。
    例えば、もしCDが<filename class="partition">hdb</filename>で、2つ目のハードドライブが<filename class="partition">hdc</filename>だとすると、2つ目のハードドライブは<emphasis>(hd1)</emphasis>となります。
    </para>

    <para>You can determine what GRUB thinks your disk devices are by running:</para> 
    <para>GRUBがあなたのディスクデバイスをどのように認識しているか、次のコマンドを実行することで確認することができます：</para>

<screen role="nodump"><userinput>grub-mkdevicemap --device-map=device.map
cat device.map</userinput></screen> 

  </sect2>

  <sect2>
    <!-- <title>Setting Up the Configuration</title> -->
    <title>設定</title>

    <para>GRUB works by writing data to the first physical track of the  
    hard disk.  This area is not part of any file system.  The programs 
    there access GRUB modules in the boot partition.  The default location 
    is /boot/grub/.</para>
    <para>ハードディスクの最初の物理トラックにデータを書くことで、GRUBが動作するようになります。
    そのエリアはファイルシステムの領域ではありません。
    そのエリアにあるプログラムが、bootパーティションにあるGRUBモジュールにアクセスします。
    その位置のデフォルトは、/boot/grubです。</para>
 
    <para>The location of the boot partition is a choice of the user that 
    affects the configuration.  One recommendation is to have a separate small 
    (suggested size is 100 MB) partition just for boot information.  That way 
    each build, whether LFS or some commercial distro, can access the same boot 
    files and access can be made from any booted system.  If you choose to do 
    this, you will need to mount the separate partition, move all files in the 
    current <filename class="directory">/boot</filename> directory (e.g. the 
    linux kernel you just built in the previous section) to the new partition. 
    You will then need to unmount the partition and remount it as <filename 
    class="directory">/boot</filename>.  If you do this, be sure to update 
    <filename>/etc/fstab</filename>.</para>
    <para>ブートパーティションの位置はユーザーが選択し、設定に影響を与えます。
    おすすめの一つは、ブートの情報のためだけの独立した小さなパーティション(推奨サイズは100MB)を用意することです。
    そんなふうに、LFSであろうがいくつかの商用ディストロであろうが、それぞれのビルドが同じブートファイルにアクセスすることが出来、ブートされたシステムであればアクセスすることが出来ます。
    もし上記のやり方を選択する場合、独立したパーティションをマウントし、現在の<filename class="directory">/boot</filename>ディレクトリのファイルすべて(例：前セクションでちょうどビルドしたLinux Kernel)を新しいパーティションに移動する必要があります。
    それからパーティションをアンマウントし、<filename class="directory">/boot</filename>としてマウントしなおす必要があります。
    また、確実に<filename>/etc/fstab</filename>を更新するようにしてください。</para> 
 
    <para>Using the current lfs partition will also work, but configuration 
    for multiple systems is more difficult.</para>
    <para>現在のlfsパーティションを使用してもうまくいきますが、複数のシステムの設定はより難しいです。</para> 

    <para>Using the above information, determine the appropriate
    designator for the root partition (or boot partition, if a separate
    one is used). For the following example, it is assumed that the root
    (or separate boot) partition is <filename
    class="partition">sda2</filename>.</para>
    <para>上記情報を使用して、rootパーティション(別のパーティションを使用する場合はbootパーティション)の適切な指定を決定してください。
    次の例の場合、root(または別のboot)パーティションは<filename class="partition">sda2</filename>と推測されます。</para>

    <para>Install the GRUB files into <filename
    class="directory">/boot/grub</filename> and set up the boot track:</para>
    <para><filename class="directory">/boot/grub</filename>にGRUBのファイルをインストールして、ブートトラックをセットアップします：</para>

    <warning>
      <para>The following command will overwrite the current boot loader. Do not
      run the command if this is not desired, for example, if using a third party
      boot manager to manage the Master Boot Record (MBR).</para>
      <para>次のコマンドは現在使用しているブートローダーを上書きします。
      もし上書きを望まないのであれば(例えばサードパーティのブートマネージャーでMBR(Master Boot Record)を管理している場合)、コマンドを実行しないでください。</para>
    </warning>

<screen role="nodump"><userinput>grub-install /dev/sda</userinput></screen>

    <note><para><application>grub-install</application> is a script and calls another
    program, grub-probe, that may fail with a message "cannot stat `/dev/root'".
    If so, create a temporary symbolic link from your root partition to /dev/root:
    </para>
    <para><application>grub-install</application>はスクリプトで、他のプログラムやgrub-probeを実行します。
    それらプログラムは"cannot stat `/dev/root'"というメッセージを出してエラーになるかもしれません。
    もしそうなった場合、rootパーティションから/dev/rootに対して、一時的なシンボリックリンクを作成してください：</para>

<screen role="nodump"><userinput>ln -sv /dev/sda2 /dev/root</userinput></screen>

    <para>The symbolic link will only be present until the system is rebooted.
    The link is only needed for the installation procedure.
    </para>
    <para>シンボリックリンクは、システムがリブートされるまでの間だけ存在します。
    そのリンクはインストール作業のときのみ必要です。</para></note>

  </sect2>

  <sect2>
    <!-- <title>Creating the Configuration File</title> -->
    <title>設定ファイルの作成</title>

    <para>Generate <filename>/boot/grub/grub.cfg</filename>:</para>
    <para><filename>/boot/grub/grub.cfg</filename>の作成：</para>

    <screen><userinput>cat &gt; /boot/grub/grub.cfg &lt;&lt; "EOF"
<literal># Begin /boot/grub/grub.cfg 
set default=0 
set timeout=5 
 
insmod ext2 
set root=(hd0,2) 
 
menuentry "GNU/Linux, Linux &linux-version;-lfs-&version;" { 
        linux   /boot/vmlinuz-&linux-version;-lfs-&version; root=/dev/sda2 ro 
}</literal> 
EOF</userinput></screen> 

    <note><para>From <application>GRUB</application>'s perspective, the 
    kernel files are relative to the partition used.  If you 
    used a separate /boot partition, remove /boot from the above 
    <emphasis>linux</emphasis> line.  You will also need to change the 
    <emphasis>set root</emphasis> line to point to the boot partition. 
    </para>
    <para><application>GRUB</application>からみると、カーネル関連のファイルは、使用しているパーティションに関連しています。
    もし独立した/bootパーティションを使用している場合、上記<emphasis>linux</emphasis>の行から/bootを取り除いてください。
    また、ブートパーティションを指定している<emphasis>set root</emphasis>の行も変更する必要があるでしょう。</para></note>
 
    <para>GRUB is an extremely powerful program and it provides a tremendous 
    number of options for booting from a wide variety of devices, operating 
    systems, and partition types.  There are also many options for customization  
    such as graphical splash screens, playing sounds, mouse input, etc.  The 
    details of these options are beyond the scope of this introduction.</para>
    <para>GRUBはとても強力なプログラムです。また、幅広い様々なデバイス、OS、パーティションタイプからのブートするための極めて多数のオプションを提供しています。
    さらに、グラフィカルなスプラッシュスクリーン、サウンド、マウス入力等のようなカスタマイズのための、多くのオプションがあります。
    それらオプションの詳細は、この導入部の範囲を超えています。
</para> 
 
    <caution><para>There is a command, <application>grub-mkconfig</application>, that 
    can write a configuration file automatically.  It uses a set of scripts in 
    /etc/grub.d/ and will destroy any customizations that you make.  These scripts 
    are designed primarily for non-source distributions and are not recommended for  
    LFS.  If you install a commercial Linux distribution, there is a good chance  
    that this program will be run.  Be sure to back up your grub.cfg file.</para>
    <para><application>grub-mkconfig</application>は、自動的に設定ファイルを作成するコマンドです。
    このコマンドは、/etc/grub.d/ にあるスクリプトを使います。また、それまでに行っていたカスタマイズをリセットします。
    それらスクリプトは主に非ソース配布用に設計されており、LFSでは非推奨です。
    もし商用のディストリビューションをインストールするならば、このプログラムを実行するいい機会です。
    その際は、確実にgrub.cfgファイルをバックアップしてください。
    </para></caution>

  </sect2>

</sect1>
