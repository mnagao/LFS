<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<!-- revision 9417 -->

<sect1 id="ch-tools-expect" role="wrap">
  <?dbhtml filename="expect.html"?>

  <sect1info condition="script">
    <productname>expect</productname>
    <productnumber>&expect-version;</productnumber>
    <address>&expect-url;</address>
  </sect1info>

  <title>Expect-&expect-version;</title>

  <indexterm zone="ch-tools-expect">
    <primary sortas="a-Expect">Expect</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>The Expect package contains a program for carrying out scripted
    dialogues with other interactive programs.</para>

    <para>Expectパッケージは、他の対話式プログラムとのやりとりを記述したスクリプトを実行するプログラムです。
    </para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&expect-ch5-sbu;</seg>
        <seg>&expect-ch5-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Expectのインストール</title>

    <para>First, force Expect's configure script to use <filename>/bin/stty</filename>
    instead of a <filename>/usr/local/bin/stty</filename> it may find on the host system.
    This will ensure that our test suite tools remain sane for the final builds of our
    toolchain:</para>

    <para>最初に、configureスクリプトに対して、ホストシステム上にある<filename>/usr/local/bin/stty</filename>の代わりに<filename>/bin/stty</filename>を使用するよう指定します。
    これにより、最終的なToolchain構築のためのテストツールが、正しい状態になることを保証します：
    </para>

<screen><userinput remap="pre">cp -v configure{,.orig}
sed 's:/usr/local/bin:/bin:' configure.orig &gt; configure</userinput></screen>

    <para>Now prepare Expect for compilation:</para>
    <para>Expectをコンパイルする準備を行います：</para>

<screen><userinput remap="configure">./configure --prefix=/tools --with-tcl=/tools/lib \
  --with-tclinclude=/tools/include</userinput></screen>

    <variablelist>
      <title>configureオプションの意味：</title>
      
      <varlistentry>
        <term><parameter>--with-tcl=/tools/lib</parameter></term>
        <listitem>
          <para>This ensures that the configure script finds the Tcl
          installation in the temporary tools location instead of possibly
          locating an existing one on the host system.</para>

          <para>この指定により、configureスクリプトが、ホストシステム上に存在するTclの代わりに、一時的ツールとしてインストールされているTclを使用することを保証します。
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--with-tclinclude=/tools/include</parameter></term>
        <listitem>
          <para>This explicitly tells Expect where to find Tcl's internal
          headers. Using this option avoids conditions where
          <command>configure</command> fails because it cannot automatically
          discover the location of Tcl's headers.</para>
          <para>Tclのヘッダファイルが存在する場所をExpectに指示します。
          configureスクリプトは、自動的にTclのヘッダファイルが存在する場所を見つけることが出来ないため、このオプションを指定することにより、<command>configure</command>の失敗を避けます。
          </para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Build the package:</para>
    <para>パッケージのビルド：</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>Compilation is now complete. As discussed earlier, running the test
    suite is not mandatory for the temporary tools here in this chapter. To run
    the Expect test suite anyway, issue the following command:</para>
    <para>これでコンパイルは完了です。前に述べたように本章でビルドする一時的なツールにおいては、テストは必須ではありません。
    どうしてもテストツールを実行する場合は、次のコマンドを実行してください：
    </para>

<screen><userinput remap="test">make test</userinput></screen>

    <para>Note that the Expect test suite is known to experience failures under
    certain host conditions that are not within our control. Therefore,
    test suite failures here are not surprising and are not considered
    critical.</para>

    <para>私たちのコントロールが及ばない、ホストシステムの特定の状況下において、ExpectのテストツールでNGが発生しうることに留意ください。
    したがって、テストツールが個々で失敗することは、驚くべきことでもなく、重大ということでもありません。
    </para>

    <para>Install the package:</para>
    <para>パッケージのインストール：</para>

<screen><userinput remap="install">make SCRIPTS="" install</userinput></screen>

    <variablelist>
      <title>makeのパラメータの意味：</title>

      <varlistentry>
        <term><parameter>SCRIPTS=""</parameter></term>
        <listitem>
          <para>This prevents installation of the supplementary Expect
          scripts, which are not needed.</para>
          <para>これにより、不必要であるExpectの追加スクリプトのインストールを行いません。
          </para>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

  <sect2 id="contents-expect" role="content">
    <title>Expectの内容</title>

    <segmentedlist>
      <segtitle>インストールされるプログラム</segtitle>
      <segtitle>インストールされるライブラリ</segtitle>

      <seglistitem>
        <seg>expect</seg>
        <seg>libexpect-&expect-lib-version;.a</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">説明</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="expect">
        <term><command>expect</command></term>
        <listitem>
          <para>Communicates with other interactive programs according
          to a script</para>
          <para>スクリプトの内容にしたがって、他の対話式プログラムとやりとりを行うプログラム。</para>
          <indexterm zone="ch-tools-expect expect">
            <primary sortas="b-expect">expect</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libexpect">
        <term><filename class="libraryfile">libexpect-&expect-lib-version;.a</filename></term>
        <listitem>
          <para>Contains functions that allow Expect to be used as a Tcl
          extension or to be used directly from C or C++ (without Tcl)</para>
          <para>ExpectをTclの拡張機能として使用するためのライブラリ。また、CまたはC++から(Tclなしで)直接呼び出すことも出来る。
          </para>
          <indexterm zone="ch-tools-expect libexpect">
            <primary sortas="c-libexpect-&expect-lib-version;">libexpect-&expect-lib-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
