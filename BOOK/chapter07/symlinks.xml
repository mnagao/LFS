<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>
<!-- revision 9473 -->

<sect1 id="ch-scripts-symlinks">
  <?dbhtml filename="symlinks.html"?>

  <!--<title>Creating Custom Symlinks to Devices</title>-->
  <title>デバイスに対する独自のシンボリックリンクの作成</title>

  <sect2>

    <!--<title>CD-ROM symlinks</title>-->
    <title>CD-ROM のシンボリックリンク</title>

    <para>Some software that you may want to install later (e.g., various
    media players) expect the <filename class="symlink">/dev/cdrom</filename>
    and <filename class="symlink">/dev/dvd</filename> symlinks to exist, and
    to point to a CD-ROM or DVD-ROM device. Also, it may be convenient to put
    references to those symlinks into <filename>/etc/fstab</filename>. Udev
    comes with a script that will generate rules files to create these symlinks
    for you, depending on the capabilities of each device, but you need to
    decide which of two modes of operation you wish to have the script use.</para>
    <para>後でインストールしたくなると思われるいくつかのソフトウェア(例：メディアプレイヤー)は、<filename class="symlink">/dev/cdrom</filename>と<filename class="symlink">/dev/dvd</filename>のシンボリックリンクが存在し、それぞれCD-ROMまたはDVD-ROMデバイスを指していることを想定しています。
    また、それらシンボリックリンクへの参照を<filename>/etc/fstab</filename>に記述すると便利です。
    Udevには、シンボリックリンクを作成するためのルールファイルを生成するスクリプトが付属しています。
    それらはデバイスの機能に依存しており、スクリプトの2つの動作モードのうち、どちらを使用するか決める必要があります。
</para>

    <para>First, the script can operate in <quote>by-path</quote> mode (used by
    default for USB and FireWire devices), where the rules it creates depend on
    the physical path to the CD or DVD device. Second, it can operate in
    <quote>by-id</quote> mode (default for IDE and SCSI devices), where the
    rules it creates depend on identification strings stored in the CD or DVD
    device itself. The path is determined by Udev's <command>path_id</command>
    script, and the identification strings are read from the hardware by its
    <command>ata_id</command> or <command>scsi_id</command> programs, depending
    on which type of device you have.</para>
    <para>1つ目は、スクリプトは<quote>by-path</quote>モード(USB・FireWireデバイスの場合にデフォルトで使用される)で動作し、スクリプトが作成するルールは、CDまたはDVDデバイスへの物理的なパスに依存しています。
    2つ目は、スクリプトは<quote>by-id</quote>モード(IDE・SCSIデバイスの場合にデフォルトで使用される)で動作し、スクリプトが作成するルールは、CDまたはDVDデバイス自身が保持している識別文字列に依存しています。
    パスはUdevの<command>path_id</command>スクリプトによって決められ、識別文字列はデバイスのタイプに応じて、<command>ata_id</command>または<command>scsi_id</command>プログラムによって、ハードウェアから読み取られます。
    </para>

    <para>There are advantages to each approach; the correct approach to use
    will depend on what kinds of device changes may happen. If you expect the
    physical path to the device (that is, the ports and/or slots that it plugs
    into) to change, for example because you plan on moving the drive to a
    different IDE port or a different USB connector, then you should use the
    <quote>by-id</quote> mode. On the other hand, if you expect the device's
    identification to change, for example because it may die, and you would
    replace it with a different device with the same capabilities and which
    is plugged into the same connectors, then you should use the
    <quote>by-path</quote> mode.</para>
    <para>それぞれの方法には利点があります。
    使用すべき正しい方法は、どの種類のデバイスに変化が起こるかに依存します。
    もし、デバイス(差し込むポートまたはスロット)への物理的なパスが変化する場合(例えばドライブを別のIDEポートまたはUSBコネクターにつなぎ変える)、<quote>by-id</quote>モードを使用するべきです。
    一方、もしデバイスの識別子が変化する場合(例えば、故障により同機能を持つ別のデバイスに置き換え、同じコネクターにつなぐケース)、<quote>by-path</quote>モードを使用するべきです。</para>

    <para>If either type of change is possible with your drive, then choose a
    mode based on the type of change you expect to happen more often.</para>
    <para>もし、両方のタイプの変化が起こる可能性がある場合は、より頻繁に起こると思われるタイプを基に、モードを選択してください。</para>

<!-- If you use by-id mode, the symlinks will survive even the transition
     to libata for IDE drives, but that is not for the book. -->

    <important><para>External devices (for example, a USB-connected CD drive)
    should not use by-path persistence, because each time the device is plugged
    into a new external port, its physical path will change. All
    externally-connected devices will have this problem if you write Udev rules
    to recognize them by their physical path; the problem is not limited to CD
    and DVD drives.</para></important>
    <important><para>外部接続のデバイス(例えばUSB接続のCDドライブ)は、by-pathモードを使用すべきではありません。
    なぜなら、デバイスを新しい外部ポートに接続するたびに、その物理的なパスが変化してしまうからです。
    もし、あなたがそれらデバイスの物理的なパスを用いて、デバイスを認識するためのUdevルールを書いた場合、全ての外部接続デバイスはこの問題を抱えることになります。
    この問題は、CDやDVDドライブに限りません。</para></important>

    <para>If you wish to see the values that the Udev scripts will use, then
    for the appropriate CD-ROM device, find the corresponding directory under
    <filename class="directory">/sys</filename> (e.g., this can be
    <filename class="directory">/sys/block/hdd</filename>) and
    run a command similar to the following:</para>
    <para>もしUdevスクリプトが使用している値を確認したいのであれば、適当なCD-ROMデバイスに対応する、<filename class="directory">/sys</filename>以下のディレクトリを見つけ(<filename class="directory">/sys/block/hdd</filename>だと思われます)、次のようなコマンドを実行してください：</para>

<screen role="nodump"><userinput>udevadm test /sys/block/hdd</userinput></screen>

    <para>Look at the lines containing the output of various *_id programs.
    The <quote>by-id</quote> mode will use the ID_SERIAL value if it exists and
    is not empty, otherwise it will use a combination of ID_MODEL and
    ID_REVISION. The <quote>by-path</quote> mode will use the ID_PATH value.</para>
    <para>各 *_idプログラムの出力を含む行を見てください。
    もしCD-ROMデバイスが存在しメディアが空でなければ、<quote>by-id</quote>モードはID_SERIALを使用します、そうでなければ、ID_MODELとID_REVISIONの組合せを使用します。
    </para>

    <para>If the default mode is not suitable for your situation, then the
    following modification can be made to the
    <filename>/lib/udev/rules.d/75-cd-aliases-generator.rules</filename> file,
    as follows (where <replaceable>mode</replaceable> is one of
    <quote>by-id</quote> or <quote>by-path</quote>):</para>
    <para>もし、デフォルトのモードが適していない場合は、次の変更を<filename>/lib/udev/rules.d/75-cd-aliases-generator.rules</filename>に行うことが出来ます(<replaceable>mode</replaceable>は<quote>by-id</quote>または<quote>by-path</quote>のどちらかです)。
    </para>

<screen role="nodump"><userinput>sed -i -e 's/"write_cd_rules"/"write_cd_rules <replaceable>mode</replaceable>"/' \
    /lib/udev/rules.d/75-cd-aliases-generator.rules</userinput></screen>

    <para>Note that it is not necessary to create the rules files or symlinks
    at this time, because you have bind-mounted the host's
    <filename class="directory">/dev</filename> directory into the LFS system,
    and we assume the symlinks exist on the host. The rules and symlinks will
    be created the first time you boot your LFS system.</para>
    <para>この時点で、ルールファイルまたはシンボリックリンクを作成する必要がないことに留意してください。
    なぜなら、ホストシステムの<filename class="directory">/dev</filename>ディレクトリをLFSシステムにbindマウントしており、ホストシステム上にシンボリックリンクが存在していると思われるからです。
    ルールとシンボリックリンクは、LFSシステムを最初にブートしたときに作成されます。</para>

    <para>However, if you have multiple CD-ROM devices, then the symlinks
    generated at that time may point to different devices than they point to on
    your host, because devices are not discovered in a predictable order. The
    assignments created when you first boot the LFS system will be stable, so
    this is only an issue if you need the symlinks on both systems to point to
    the same device. If you need that, then inspect (and possibly edit) the
    generated <filename>/etc/udev/rules.d/70-persistent-cd.rules</filename>
    file after booting, to make sure the assigned symlinks match what you need.</para>
    <para>しかしながら、もしCD-ROMデバイスが複数ある場合、その時生成されるシンボリックリンクは、ホストシステム上を指すというよりも、異なったデバイスを指し示すかもしれません。
    なぜなら、デバイスは予測可能な順序で認識されないからです。
    LFSシステムを最初にブートした時に作成される割り当ては、変わらないでしょう。
    したがって、もしホストシステム・LFSシステムの両方が同じデバイスを指すシンボリックリンクが必要であれば、これは単なる問題です。</para>

  </sect2>
  <sect2>

    <!--<title>Dealing with duplicate devices</title>-->
    <title>重複したデバイスの対処</title>

    <para>As explained in <xref linkend="ch-scripts-udev"/>, the order in
    which devices with the same function appear in
    <filename class="directory">/dev</filename> is essentially random.
    E.g., if you have a USB web camera and a TV tuner, sometimes
    <filename>/dev/video0</filename> refers to the camera and
    <filename>/dev/video1</filename> refers to the tuner, and sometimes
    after a reboot the order changes to the opposite one.
    For all classes of hardware except sound cards and network cards, this is
    fixable by creating udev rules for custom persistent symlinks.
    The case of network cards is covered separately in
    <xref linkend="ch-scripts-network"/>, and sound card configuration can
    be found in <ulink url="&blfs-root;view/svn/postlfs/devices.html">BLFS</ulink>.</para>
    <para><xref linkend="ch-scripts-udev"/>で説明したように、同じ機能を持つデバイスが<filename class="directory">/dev</filename>に作成される順序は、基本的にランダムです。
    例えば、もしUSB WebカメラとTVチューナーを持っている場合、時には<filename>/dev/video0</filename>がWebカメラを参照し、<filename>/dev/video1</filename>がTVチューナーを参照しますが、リブート後は逆の順序で参照されるかもしれません。
    サウンドカードとネットワークカードを除いた全てのハードウェアに対して、独自の固定的なシンボリックリンクを作るUdevルールを作成することで、デバイスの順序を固定的にすることが出来ます。
    ネットワークカードの対処は、別途<xref linkend="ch-scripts-network"/>で取り扱います。
    また、サウンドーカードの設定方法は、<ulink url="&blfs-root;view/svn/postlfs/devices.html">BLFS</ulink>で見ることが出来ます。</para>

    <para>For each of your devices that is likely to have this problem
    (even if the problem doesn't exist in your current Linux distribution),
    find the corresponding directory under
    <filename class="directory">/sys/class</filename> or
    <filename class="directory">/sys/block</filename>.
    For video devices, this may be
    <filename
    class="directory">/sys/class/video4linux/video<replaceable>X</replaceable></filename>.
    Figure out the attributes that identify the device uniquely (usually,
    vendor and product IDs and/or serial numbers work):</para>
    <para>この問題が生じそうなデバイスに対処するため(たとえ現在使用しているLinuxディストリビューションで問題がないとしても)、<filename class="directory">/sys/class</filename>または<filename class="directory">/sys/block</filename>以下の対応するディレクトリを見つけてください。
    ビデオデバイスであれば、<filename class="directory">/sys/class/video4linux/video<replaceable>X</replaceable></filename>かもしれません。
    次に、デバイスを個々に認識するため属性を見つけ出してください(通常は、ベンダー名やプロダクトIDやシリアル番号がうまくいきます)。</para>

<screen role="nodump"><userinput>udevadm info -a -p /sys/class/video4linux/video0</userinput></screen>

    <para>Then write rules that create the symlinks, e.g.:</para>
    <para>次に、シンボリックリンクを作成するルールを書きます。例：</para>

<screen role="nodump"><userinput>cat &gt; /etc/udev/rules.d/83-duplicate_devs.rules &lt;&lt; "EOF"
<literal>
# Persistent symlinks for webcam and tuner
KERNEL=="video*", ATTRS{idProduct}=="1910", ATTRS{idVendor}=="0d81", \
    SYMLINK+="webcam"
KERNEL=="video*", ATTRS{device}=="0x036f", ATTRS{vendor}=="0x109e", \
    SYMLINK+="tvtuner"
</literal>
EOF</userinput></screen>

    <para>The result is that <filename>/dev/video0</filename> and
    <filename>/dev/video1</filename> devices still refer randomly to the tuner
    and the web camera (and thus should never be used directly), but there are
    symlinks <filename>/dev/tvtuner</filename> and
    <filename>/dev/webcam</filename> that always point to the correct
    device.</para>
    <para>結果としては、<filename>/dev/video0</filename>と<filename>/dev/video1</filename>デバイスは、チューナーとWebカメラをまだランダムに参照します(したがって、決して直接使用するべきではありません)。
    しかし、<filename>/dev/tvtuner</filename>と<filename>/dev/webcam</filename>のシンボリックリンクは、いつも正しいデバイスを指します。</para>

 </sect2>

</sect1>
